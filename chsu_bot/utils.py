"""–ú–æ–¥—É–ª—å –¥–ª—è —É—Ç–∏–ª–∏—Ç."""

import datetime
from typing import Dict, List


days_of_week = {
    "Sunday": "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ",
    "Monday": "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
    "Tuesday": "–≤—Ç–æ—Ä–Ω–∏–∫",
    "Wednesday": "—Å—Ä–µ–¥–∞",
    "Thursday": "—á–µ—Ç–≤–µ—Ä–≥",
    "Friday": "–ø—è—Ç–Ω–∏—Ü–∞",
    "Saturday": "—Å—É–±–±–æ—Ç–∞",
}


def render(json_response: List[dict]) -> List[str]:
    """–†–µ–Ω–¥–µ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è."""
    if json_response != []:
        return read_json(json_response)
    else:
        return ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"]


def read_json(json: List[Dict[str, str]]) -> List[str]:
    """–ß—Ç–µ–Ω–∏–µ json –∏ —Ä–µ–Ω–¥–µ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è."""
    schedule_messages = []
    message = ""
    schedule = ""
    for elem in json:
        date = elem["dateEvent"]
        if schedule == "":
            start_date = date
            schedule += (
                f"*–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {start_date} *"
                f"*- {get_week_day(start_date)}*\n\n"
            )
        elif date != start_date:
            start_date = date
            if len(message) + len(schedule) < 4096:
                message += schedule
            else:
                schedule_messages.append(message)
                message = schedule
            schedule = (
                f"*–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {start_date} *"
                f"*- {get_week_day(start_date)}*\n\n"
            )
        duration = get_duration_lesson(elem)
        lesson_name = get_lesson_and_type(elem)
        auditory = get_auditory(elem)
        lecture = get_lecture(elem)
        schedule += (
            f"‚åö {duration}\nüè´ {lesson_name}\nüßë {lecture}\nüè¢ {auditory}\n\n"
        )
    if len(message) + len(schedule) < 4096:
        schedule_messages.append(message + schedule)
    else:
        schedule_messages.append(message)
        schedule_messages.append(schedule)
    return schedule_messages


def get_duration_lesson(json: Dict[str, str]) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω—è—Ç–∏—è."""
    return f"{json['startTime']}-{json['endTime']}"


def get_lesson_and_type(json: Dict[str, str]) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è –∏ –µ–≥–æ —Ç–∏–ø–∞."""
    if json["abbrlessontype"] is None:
        return f"{json['discipline']['title']}"
    return f"{json['abbrlessontype']}. {json['discipline']['title']}"


def get_auditory(json: Dict[str, str]) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏."""
    if json["onlineEvent"] is not None:
        return "–û–Ω–ª–∞–π–Ω"
    elif json["auditory"] is None:
        return "-/-"
    return f"{json['auditory']['title']}, {json['build']['title'].lower()}"


def get_lecture(json: Dict[str, str]) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π."""
    return ", ".join(
        [
            lecture["shortName"]
            for lecture in json["lecturers"]
        ]
    )


def valid_range_length(start_date: str, end_date: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–π –¥–ª–∏–Ω–µ."""
    start_date = datetime.datetime.strptime(start_date, "%d.%m.%Y")
    end_date = datetime.datetime.strptime(end_date, "%d.%m.%Y")
    return -31 <= (end_date - start_date).days <= 31


def valid_date(fst_date: str, snd_date: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–∞—Ç."""
    fst_date = datetime.datetime.strptime(fst_date, "%d.%m.%Y")
    snd_date = datetime.datetime.strptime(snd_date, "%d.%m.%Y")
    return snd_date >= fst_date


def get_week_day(date: str) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º."""
    day, month, year = map(int, date.split("."))
    return days_of_week[
        datetime.date(year=year, month=month, day=day).strftime("%A")
    ]


def formated_date(date: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Ñ–æ—Ä–º–µ."""
    return datetime.datetime.strptime(date, "%d.%m.%Y").strftime("%d.%m.%Y")
